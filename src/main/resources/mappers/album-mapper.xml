<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hh.study.genieapi.album.mapper.AlbumMapper">
    <select id="findAll" resultType="Album">
        select rownum() rnum, a.albumId, b.artistId, b.artistName, a.albumTitle,
               a.releaseDate, a.genre, a.albumExplanation, a.albumAuthor,
               a.createDate
               from album a
        join artist b on a.artistId = b.artistId
        <if test="searchParam != null">
            where albumTitle LIKE '%'||#{searchParam}||'%'
        </if>
        order by albumId desc
    </select>
    <select id="searchArtist" resultType="Artist" parameterType="string">
        select rownum() rnum, * from artist
        <if test="searchParam != null">
            where artistName LIKE '%'||#{searchParam}||'%'
        </if>
        order by artistId desc
    </select>

    <insert id="createAlbums" parameterType="Album" useGeneratedKeys="true" keyProperty="albumId">
        insert into album
        (artistId, albumTitle, releaseDate, genre, albumExplanation, createDate, albumAuthor)
        values
            (#{artistId}, #{albumTitle}, #{releaseDate}, #{genre}, #{albumExplanation}, NOW(), 'sony');
    </insert>

    <insert id="insertMusics" parameterType="java.util.List">
        insert into music
        (orders, albumId, musicTitle, playTime, status)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.orders}, #{item.albumId}, #{item.musicTitle}, #{item.playTime}, #{item.status})
        </foreach>
    </insert>

    <select id="findByIdToAlbum" resultType="Album" parameterType="int">
        select a.albumId, b.artistId, b.artistName, a.albumTitle,
               a.releaseDate, a.genre, a.albumExplanation, a.albumAuthor,
               a.createDate, a.modifyDate
        from album a
                 join artist b on a.artistId = b.artistId
        where a.albumId = #{id}
    </select>
    <select id="findByIdToMusic" resultType="Music" parameterType="int">
        select *
        from music
        where albumId = #{id}
    </select>

    <update id="updateAlbums" parameterType="Album">
        update album
            set artistId = #{artistId},
                albumTitle = #{albumTitle},
                releaseDate = #{releaseDate},
                genre = #{genre},
                albumExplanation = #{albumExplanation},
                modifyDate = now()
        where albumId = #{albumId}
    </update>
    <delete id="deleteMusics" parameterType="int">
        delete from music
        where albumId = #{id}
    </delete>
    <delete id="deleteAlbums" parameterType="int">
        delete from album
        where albumId = #{id}
    </delete>
</mapper>